{"version":3,"sources":["redux/contacts/contacts-selectors.js","components/ContactList/ContactList.module.css","components/ContactList/ContactList.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getError","error","getVisibleContacts","createSelector","search","toUpperCase","contact","name","includes","module","exports","ContactList","visibleContacts","useSelector","dispatch","useDispatch","useEffect","getContactsAsync","console","log","message","className","s","list","style","color","textTransform","map","id","number","tel","replace","item","href","button","type","onClick","e","deleteContactAsync","currentTarget","dataset"],"mappings":"+IAAA,oJAEaA,EAAc,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAExCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAEtCC,EAAW,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAYrCC,EAAqBC,YAChC,CAACT,EAAaI,IACd,SAACF,EAAUG,GACT,IAAMK,EAASL,EAAOM,cACtB,OAAOT,EAASG,QAAO,SAACO,GAAD,OACrBA,EAAQC,KAAKF,cAAcG,SAASJ,U,mBCtB1CK,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,iJC0D9EC,MA9Cf,WACE,IAAMC,EAAkBC,YAAYX,KAC9BD,EAAQY,YAAYb,KACpBc,EAAWC,cAQjB,OANAC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAEJI,QAAQC,IAAIlB,GAASA,EAAMmB,SAGzB,qBAAIC,UAAWC,IAAEC,KAAjB,UACGtB,GACC,6BACE,oBAAIuB,MAAO,CAAEC,MAAO,MAAOC,cAAe,aAA1C,SACGzB,EAAMmB,YAKZR,GACCA,EAAgBe,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIrB,EAAmB,EAAnBA,KAAMsB,EAAa,EAAbA,OACzBC,EAAM,OAASD,EAAOE,QAAQ,YAAa,MACjD,OACE,qBAAaV,UAAWC,IAAEU,KAA1B,UACE,8BACGzB,EADH,KACU,mBAAG0B,KAAMH,EAAT,SAAeD,OAEzB,wBACER,UAAWC,IAAEY,OACbC,KAAK,SACL,UAASP,EACTQ,QAAS,SAACC,GACRvB,EAASwB,YAAmBD,EAAEE,cAAcC,QAAQZ,MALxD,SAQE,cAAC,IAAD,QAZKA","file":"static/js/contact-list.7619517f.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getError = (state) => state.contacts.error;\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const search = filter.toUpperCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toUpperCase().includes(search)\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const search = filter.toUpperCase();\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(search)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport {\n  getVisibleContacts,\n  getError,\n} from \"redux/contacts/contacts-selectors\";\nimport {\n  getContactsAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAsync());\n  }, [dispatch]);\n\n  console.log(error && error.message);\n\n  return (\n    <ul className={s.list}>\n      {error && (\n        <li>\n          <h2 style={{ color: \"red\", textTransform: \"uppercase\" }}>\n            {error.message}\n          </h2>\n        </li>\n      )}\n\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContactAsync(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n"],"sourceRoot":""}