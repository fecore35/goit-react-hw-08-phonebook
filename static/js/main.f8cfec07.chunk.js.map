{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","getContactsAsync","createAsyncThunk","_","a","rejectWithValue","axios","get","response","contacts","data","addContactAsync","contact","post","newContact","deleteContactAsync","id","delete","deleteContact","itemsReducer","createReducer","fulfilled","action","payload","state","filter","item","isLoading","pending","rejected","itemsError","filterReducer","contactsReducer","combineReducers","items","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","next","store","configureStore","reducer","devTools","getContacts","getFilter","getVisibleContacts","createSelector","search","toUpperCase","name","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handlerChange","event","target","value","className","s","form","onSubmit","e","preventDefault","newContactName","find","alert","phone","label","type","input","pattern","title","required","onChange","button","Filter","container","ContactList","visibleContacts","useEffect","list","map","tel","replace","href","onClick","currentTarget","dataset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8cfec07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n/* Get */\n// export const getContactsRequest = createAction(\"contacts/GetContactsRequest\");\n// export const getContactsSuccesses = createAction(\n//   \"contacts/GetContactsSuccesses\"\n// );\n// export const getContactsError = createAction(\"contacts/GetContactsError\");\n\n/* Create */\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\n// export const addContactSuccesses = createAction(\"contacts/addContactSuccesses\");\n// export const addContactError = createAction(\"contacts/addContactError\");\n\n/* Delete */\n// export const deleteContactRequest = createAction(\n//   \"contacts/deleteContactRequest\"\n// );\n// export const deleteContactSuccesses = createAction(\n//   \"contacts/deleteContactSuccesses\"\n// );\n// export const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const createContact = createAction(\"contacts/Create\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getContactsAsync = createAsyncThunk(\n  \"contacts/getContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        \"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\"\n      );\n      const contacts = response.data;\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const getContacts = () => (dispatch) => {\n//   dispatch(actions.getContactsRequest());\n\n//   fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\")\n//     .then((data) => data.json())\n//     .then((data) => {\n//       dispatch(actions.getContactsSuccesses(data));\n//     })\n//     .catch((error) => dispatch(actions.getContactsError(error)));\n// };\n\nexport const addContactAsync = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        \"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\",\n        contact\n      );\n      const newContact = response.data;\n      return newContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const addContact = (contact) => (dispatch) => {\n//   dispatch(actions.addContactRequest());\n//   console.log(contact);\n\n//   fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json;charset=utf-8\",\n//     },\n//     body: JSON.stringify(contact),\n//   })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       dispatch(actions.addContactSuccesses(data));\n//     })\n//     .catch((error) => {\n//       dispatch(actions.addContactError(error));\n//     });\n// };\n\nexport const deleteContactAsync = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(\n        `https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`\n      );\n      const deleteContact = response.data;\n      return deleteContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const deleteContact = (id) => (dispatch) => {\n//   dispatch(actions.deleteContactRequest());\n\n//   fetch(`https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`, {\n//     method: \"DELETE\",\n//   })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       console.log(data);\n//       dispatch(actions.deleteContactSuccesses(data));\n//     })\n//     .catch((error) => dispatch(actions.deleteContactError(error)));\n// };\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { changeFilter } from \"../contacts/contacts-action\";\n\nimport {\n  getContactsAsync,\n  addContactAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nconst itemsReducer = createReducer([], {\n  /* Get */\n  [getContactsAsync.fulfilled]: (_, action) => [...action.payload],\n\n  /* Create */\n  [addContactAsync.fulfilled]: (state, action) => [...state, action.payload],\n\n  /* Delete */\n  [deleteContactAsync.fulfilled]: (state, action) =>\n    state.filter((item) => item.id !== action.payload.id),\n});\n\nconst isLoading = createReducer(false, {\n  /* Get */\n  [getContactsAsync.pending]: () => true,\n  [getContactsAsync.fulfilled]: () => false,\n  [getContactsAsync.rejected]: () => false,\n\n  /* Create */\n  [addContactAsync.pending]: () => true,\n  [addContactAsync.fulfilled]: () => false,\n  [addContactAsync.rejected]: () => false,\n\n  /* Delete */\n  [deleteContactAsync.pending]: () => true,\n  [deleteContactAsync.fulfilled]: () => false,\n  [deleteContactAsync.rejected]: () => false,\n});\n\nconst itemsError = createReducer(null, {\n  /* Get */\n  [getContactsAsync.rejected]: (_, action) => action.payload,\n\n  /* Create */\n  [addContactAsync.rejected]: (_, action) => action.payload,\n\n  /* Delete */\n  [deleteContactAsync.rejected]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading,\n  error: itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\n\nconst firstMiddleware = (state) => (next) => (action) => {\n  // console.log(\"firstMiddleware-> \", action);\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  firstMiddleware,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: true ?? process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const search = filter.toUpperCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toUpperCase().includes(search)\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const search = filter.toUpperCase();\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(search)\n    );\n  }\n);\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport { addContactAsync } from \"redux/contacts/contacts-operation\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handlerChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSaveContact = (e) => {\n    e.preventDefault();\n\n    const newContactName = e.target.name.value.toUpperCase();\n    const knownContactToName = contacts.find(\n      ({ name }) => name.toUpperCase() === newContactName\n    );\n\n    if (knownContactToName) {\n      return alert(`${newContactName} is already in contacts.`);\n    }\n\n    const newContact = { name, phone: number };\n    setName(\"\");\n    setNumber(\"\");\n\n    // ? GlobalState - add new Contact\n    dispatch(addContactAsync(newContact));\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSaveContact}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import s from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </section>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport { getVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport {\n  getContactsAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAsync());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, phone: number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContactAsync(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}