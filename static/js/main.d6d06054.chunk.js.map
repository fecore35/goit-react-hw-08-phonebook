{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-reducer.js","redux/store.js","components/CustomLink/CustomLink.js","components/Header/Header.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/HomeView.js","components/ContactForm/ContactForm.js","views/CreateView.js","components/RegisterForm/RegisterForm.js","views/RegisterView.js","components/LoginForm/LoginForm.js","views/LoginView.js","views/NotFoundView.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","getContactsAsync","createAsyncThunk","_","a","rejectWithValue","axios","get","response","contacts","data","addContactAsync","contact","post","newContact","deleteContactAsync","id","delete","deleteContact","itemsReducer","createReducer","fulfilled","action","payload","state","filter","item","isLoading","pending","rejected","itemsError","filterReducer","contactsReducer","combineReducers","items","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","next","store","configureStore","reducer","devTools","CustomLink","children","to","props","resolved","useResolvedPath","match","useMatch","path","pathname","end","style","textDecoration","Header","getContacts","getFilter","getError","getVisibleContacts","createSelector","search","toUpperCase","name","includes","Filter","useSelector","dispatch","useDispatch","className","s","container","type","input","pattern","title","value","onChange","e","target","ContactList","visibleContacts","useEffect","console","log","message","list","color","textTransform","map","number","phone","tel","replace","href","button","onClick","currentTarget","dataset","HomeView","ContactForm","initialValues","validate","values","errors","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","htmlFor","component","disabled","CreateView","RegisterForm","email","password","test","RegisterView","LoginForm","LoginView","NotFoundView","App","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,wB,4JCuBbC,GADgBC,YAAa,mBACdA,YAAa,oB,0CCrB5BC,EAAmBC,YAC9B,sBAD8C,uCAE9C,WAAOC,EAAP,sBAAAC,EAAA,6DAAYC,EAAZ,EAAYA,gBAAZ,kBAE2BC,IAAMC,IAC3B,+DAHN,cAEUC,EAFV,OAKUC,EAAWD,EAASE,KAL9B,kBAMWD,GANX,yDAQWJ,EAAgB,EAAD,KAR1B,yDAF8C,yDA0BnCM,EAAkBT,YAC7B,sBAD6C,uCAE7C,WAAOU,EAAP,sBAAAR,EAAA,6DAAkBC,EAAlB,EAAkBA,gBAAlB,kBAE2BC,IAAMO,KAC3B,8DACAD,GAJN,cAEUJ,EAFV,OAMUM,EAAaN,EAASE,KANhC,kBAOWI,GAPX,yDASWT,EAAgB,EAAD,KAT1B,yDAF6C,yDAoClCU,EAAqBb,YAChC,yBADgD,uCAEhD,WAAOc,EAAP,sBAAAZ,EAAA,6DAAaC,EAAb,EAAaA,gBAAb,kBAE2BC,IAAMW,OAAN,sEAC0CD,IAHrE,cAEUR,EAFV,OAKUU,EAAgBV,EAASE,KALnC,kBAMWQ,GANX,yDAQWb,EAAgB,EAAD,KAR1B,yDAFgD,yDCvD5Cc,EAAeC,YAAc,IAAD,mBAE/BnB,EAAiBoB,WAAY,SAAClB,EAAGmB,GAAJ,mBAAmBA,EAAOC,YAFxB,cAK/BZ,EAAgBU,WAAY,SAACG,EAAOF,GAAR,4BAAuBE,GAAvB,CAA8BF,EAAOC,aALlC,cAQ/BR,EAAmBM,WAAY,SAACG,EAAOF,GAAR,OAC9BE,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKV,KAAOM,EAAOC,QAAQP,SATpB,IAY5BW,EAAYP,aAAc,GAAD,mBAE5BnB,EAAiB2B,SAAU,kBAAM,KAFL,cAG5B3B,EAAiBoB,WAAY,kBAAM,KAHP,cAI5BpB,EAAiB4B,UAAW,kBAAM,KAJN,cAO5BlB,EAAgBiB,SAAU,kBAAM,KAPJ,cAQ5BjB,EAAgBU,WAAY,kBAAM,KARN,cAS5BV,EAAgBkB,UAAW,kBAAM,KATL,cAY5Bd,EAAmBa,SAAU,kBAAM,KAZP,cAa5Bb,EAAmBM,WAAY,kBAAM,KAbT,cAc5BN,EAAmBc,UAAW,kBAAM,KAdR,IAiBzBC,EAAaV,YAAc,MAAD,mBAE7BnB,EAAiB4B,UAAW,SAAC1B,EAAGmB,GAAJ,OAAeA,EAAOC,WAFrB,cAK7BZ,EAAgBkB,UAAW,SAAC1B,EAAGmB,GAAJ,OAAeA,EAAOC,WALpB,cAQ7BR,EAAmBc,UAAW,SAAC1B,EAAGmB,GAAJ,OAAeA,EAAOC,WARvB,IAW1BQ,EAAgBX,YAAc,GAAD,eAChCrB,GAAe,SAACI,EAAGmB,GAAJ,OAAeA,EAAOC,YAG3BS,EAAkBC,YAAgB,CAC7CC,MAAOf,EACPM,OAAQM,EACRJ,YACAQ,MAAOL,IC1CHM,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CALQ,SAACrB,GAAD,OAAW,SAACsB,GAAD,OAAU,SAACxB,GAE5CwB,EAAKxB,QAoBQyB,EARDC,YAAe,CAC3BC,QAAS,CACPxC,SAAUuB,GAEZI,aACAc,SAAQ,QAAE,I,kDCVGC,MAjBf,YAAiD,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,GAAOC,EAAS,iBAC1CC,EAAWC,YAAgBH,GAC3BI,EAAQC,YAAS,CAAEC,KAAMJ,EAASK,SAAUC,KAAK,IAErD,OACE,8BACE,cAAC,IAAD,yBACEC,MAAO,CAAEC,eAAgBN,EAAQ,YAAc,QAC/CJ,GAAIA,GACAC,GAHN,aAKGF,QCgBMY,MA3Bf,WACE,OACE,qCACE,iCACE,8BACE,+BACE,6BACE,cAAC,EAAD,CAAYX,GAAG,IAAf,oBAEF,6BACE,cAAC,EAAD,CAAYA,GAAG,UAAf,8BAEF,6BACE,cAAC,EAAD,CAAYA,GAAG,YAAf,wBAEF,6BACE,cAAC,EAAD,CAAYA,GAAG,SAAf,4BAMR,cAAC,IAAD,Q,yBCvBOY,EAAc,SAACzC,GAAD,OAAWA,EAAMf,SAASyB,OAExCgC,EAAY,SAAC1C,GAAD,OAAWA,EAAMf,SAASgB,QAEtC0C,EAAW,SAAC3C,GAAD,OAAWA,EAAMf,SAAS0B,OAYrCiC,EAAqBC,YAChC,CAACJ,EAAaC,IACd,SAACzD,EAAUgB,GACT,IAAM6C,EAAS7C,EAAO8C,cACtB,OAAO9D,EAASgB,QAAO,SAACb,GAAD,OACrBA,EAAQ4D,KAAKD,cAAcE,SAASH,SCI3BI,MAtBf,WACE,IAAMjD,EAASkD,YAAYT,GACrBU,EAAWC,cAEjB,OACE,yBAASC,UAAWC,IAAEC,UAAtB,SACE,yDAEE,uBACEC,KAAK,OACLH,UAAWC,IAAEG,MACbV,KAAK,SACLW,QAAQ,yHACRC,MAAM,kcACNC,MAAO5D,EACP6D,SAAU,SAACC,GAAD,OAAOX,EAAS7E,EAAawF,EAAEC,OAAOH,iB,yBCuC3CI,MA9Cf,WACE,IAAMC,EAAkBf,YAAYP,GAC9BjC,EAAQwC,YAAYR,GACpBS,EAAWC,cAQjB,OANAc,qBAAU,WACRf,EAAS3E,OACR,CAAC2E,IAEJgB,QAAQC,IAAI1D,GAASA,EAAM2D,SAGzB,qBAAIhB,UAAWC,IAAEgB,KAAjB,UACG5D,GACC,6BACE,oBAAI2B,MAAO,CAAEkC,MAAO,MAAOC,cAAe,aAA1C,SACG9D,EAAM2D,YAKZJ,GACCA,EAAgBQ,KAAI,YAAkC,IAA/BlF,EAA8B,EAA9BA,GAAIwD,EAA0B,EAA1BA,KAAa2B,EAAa,EAApBC,MACzBC,EAAM,OAASF,EAAOG,QAAQ,YAAa,MACjD,OACE,qBAAaxB,UAAWC,IAAErD,KAA1B,UACE,8BACG8C,EADH,KACU,mBAAG+B,KAAMF,EAAT,SAAeF,OAEzB,wBACErB,UAAWC,IAAEyB,OACbvB,KAAK,SACL,UAASjE,EACTyF,QAAS,SAAClB,GACRX,EAAS7D,EAAmBwE,EAAEmB,cAAcC,QAAQ3F,MALxD,SAQE,cAAC,IAAD,QAZKA,UCxBN4F,MAXf,WACE,OACE,qCACE,2CAEA,cAAC,EAAD,IACA,cAAC,EAAD,Q,OC4ESC,OA7Ef,WACmBlC,YAAYV,GAA7B,IACM9B,EAAQwC,YAAYR,GAqC1B,OApCiBU,cAqCf,qCACE,cAAC,IAAD,CACEiC,cAAe,CAAEtC,KAAM,GAAI2B,OAAQ,IACnCY,SAlBc,SAACC,GACnB,IAAMC,EAAS,GAUf,OARKD,EAAOxC,OACVyC,EAAOzC,KAAO,YAGXwC,EAAOb,SACVc,EAAOd,OAAS,YAGXc,GAQHC,SAAU,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,IACnCG,GAAc,KACb,MAPP,SAUG,gBAAGK,EAAH,EAAGA,aAAH,OACC,eAAC,IAAD,WACE,uBAAOC,QAAQ,OAAf,kBACA,cAAC,IAAD,CAAOxC,KAAK,OAAOT,KAAK,OAAOxD,GAAG,SAClC,cAAC,IAAD,CAAcwD,KAAK,OAAOkD,UAAU,QAEpC,uBAAOD,QAAQ,cAAf,oBACA,cAAC,IAAD,CAAOxC,KAAK,MAAMT,KAAK,SAASxD,GAAG,gBACnC,cAAC,IAAD,CAAcwD,KAAK,SAASkD,UAAU,QAEtC,wBAAQzC,KAAK,SAAS0C,SAAUH,EAAhC,+BAOLrF,GACC,oBAAI2B,MAAO,CAAEkC,MAAO,MAAOC,cAAe,aAA1C,SACG9D,EAAM2D,cClEF8B,OAVf,WACE,OACE,qCACE,gDAEA,cAAC,GAAD,QC+CSC,OApDf,WAqBE,OACE,cAAC,IAAD,CACEf,cAAe,CAAEtC,KAAM,GAAIsD,MAAO,GAAIC,SAAU,IAChDhB,SAvBgB,SAACC,GACnB,IAAMC,EAAS,GAgBf,OAdKD,EAAOxC,OACVyC,EAAOzC,KAAO,YAGXwC,EAAOe,WACVd,EAAOc,SAAW,YAGff,EAAOc,MAEA,2CAA2CE,KAAKhB,EAAOc,SACjEb,EAAOa,MAAQ,yBAFfb,EAAOa,MAAQ,WAKVb,GAOLC,SAAU,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,IACnCG,GAAc,KACb,MAPP,SAUG,gBAAGK,EAAH,EAAGA,aAAH,OACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvC,KAAK,OAAOT,KAAK,SACxB,cAAC,IAAD,CAAcA,KAAK,OAAOkD,UAAU,QAEpC,cAAC,IAAD,CAAOzC,KAAK,QAAQT,KAAK,UACzB,cAAC,IAAD,CAAcA,KAAK,QAAQkD,UAAU,QAErC,cAAC,IAAD,CAAOzC,KAAK,WAAWT,KAAK,aAC5B,cAAC,IAAD,CAAcA,KAAK,WAAWkD,UAAU,QAExC,wBAAQzC,KAAK,SAAS0C,SAAUH,EAAhC,2BCjCKS,OAVf,WACE,OACE,qCACE,0CAEA,cAAC,GAAD,QCgCSC,OArCf,WACE,OACE,cAAC,IAAD,CACEpB,cAAe,CAAEgB,MAAO,GAAIC,SAAU,IACtChB,SAAU,SAACC,GACT,IAAMC,EAAS,GAQf,OAPKD,EAAOc,MAGT,2CAA2CE,KAAKhB,EAAOc,SAExDb,EAAOa,MAAQ,yBAJfb,EAAOa,MAAQ,WAMVb,GAETC,SAAU,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,IACnCG,GAAc,KACb,MAjBP,SAoBG,gBAAGK,EAAH,EAAGA,aAAH,OACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvC,KAAK,QAAQT,KAAK,UACzB,cAAC,IAAD,CAAcA,KAAK,QAAQkD,UAAU,QACrC,cAAC,IAAD,CAAOzC,KAAK,WAAWT,KAAK,aAC5B,cAAC,IAAD,CAAcA,KAAK,WAAWkD,UAAU,QACxC,wBAAQzC,KAAK,SAAS0C,SAAUH,EAAhC,2BClBKW,OAVf,WACE,OACE,qCACE,uCAEA,cAAC,GAAD,QCMSC,OAXf,WACE,OACE,gCACE,sDACA,4BACE,cAAC,IAAD,CAAM/E,GAAG,IAAT,uCCiBOgF,OAhBf,WACE,OACE,qBAAKvD,UAAU,YAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOnB,KAAK,IAAI2E,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAO3E,KAAK,SAAS2E,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAO3E,KAAK,WAAW2E,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAO3E,KAAK,QAAQ2E,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAO3E,KAAK,IAAI2E,QAAS,cAAC,GAAD,c,MCTnCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAU3F,MAAOA,EAAjB,SACE,cAAC,GAAD,UAIN4F,SAASC,eAAe,W","file":"static/js/main.d6d06054.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n/* Get */\n// export const getContactsRequest = createAction(\"contacts/GetContactsRequest\");\n// export const getContactsSuccesses = createAction(\n//   \"contacts/GetContactsSuccesses\"\n// );\n// export const getContactsError = createAction(\"contacts/GetContactsError\");\n\n/* Create */\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\n// export const addContactSuccesses = createAction(\"contacts/addContactSuccesses\");\n// export const addContactError = createAction(\"contacts/addContactError\");\n\n/* Delete */\n// export const deleteContactRequest = createAction(\n//   \"contacts/deleteContactRequest\"\n// );\n// export const deleteContactSuccesses = createAction(\n//   \"contacts/deleteContactSuccesses\"\n// );\n// export const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const createContact = createAction(\"contacts/Create\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getContactsAsync = createAsyncThunk(\n  \"contacts/getContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        \"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\"\n      );\n      const contacts = response.data;\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const getContacts = () => (dispatch) => {\n//   dispatch(actions.getContactsRequest());\n\n//   fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\")\n//     .then((data) => data.json())\n//     .then((data) => {\n//       dispatch(actions.getContactsSuccesses(data));\n//     })\n//     .catch((error) => dispatch(actions.getContactsError(error)));\n// };\n\nexport const addContactAsync = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        \"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\",\n        contact\n      );\n      const newContact = response.data;\n      return newContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const addContact = (contact) => (dispatch) => {\n//   dispatch(actions.addContactRequest());\n//   console.log(contact);\n\n//   fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json;charset=utf-8\",\n//     },\n//     body: JSON.stringify(contact),\n//   })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       dispatch(actions.addContactSuccesses(data));\n//     })\n//     .catch((error) => {\n//       dispatch(actions.addContactError(error));\n//     });\n// };\n\nexport const deleteContactAsync = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(\n        `https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`\n      );\n      const deleteContact = response.data;\n      return deleteContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const deleteContact = (id) => (dispatch) => {\n//   dispatch(actions.deleteContactRequest());\n\n//   fetch(`https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`, {\n//     method: \"DELETE\",\n//   })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       console.log(data);\n//       dispatch(actions.deleteContactSuccesses(data));\n//     })\n//     .catch((error) => dispatch(actions.deleteContactError(error)));\n// };\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { changeFilter } from \"../contacts/contacts-action\";\n\nimport {\n  getContactsAsync,\n  addContactAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nconst itemsReducer = createReducer([], {\n  /* Get */\n  [getContactsAsync.fulfilled]: (_, action) => [...action.payload],\n\n  /* Create */\n  [addContactAsync.fulfilled]: (state, action) => [...state, action.payload],\n\n  /* Delete */\n  [deleteContactAsync.fulfilled]: (state, action) =>\n    state.filter((item) => item.id !== action.payload.id),\n});\n\nconst isLoading = createReducer(false, {\n  /* Get */\n  [getContactsAsync.pending]: () => true,\n  [getContactsAsync.fulfilled]: () => false,\n  [getContactsAsync.rejected]: () => false,\n\n  /* Create */\n  [addContactAsync.pending]: () => true,\n  [addContactAsync.fulfilled]: () => false,\n  [addContactAsync.rejected]: () => false,\n\n  /* Delete */\n  [deleteContactAsync.pending]: () => true,\n  [deleteContactAsync.fulfilled]: () => false,\n  [deleteContactAsync.rejected]: () => false,\n});\n\nconst itemsError = createReducer(null, {\n  /* Get */\n  [getContactsAsync.rejected]: (_, action) => action.payload,\n\n  /* Create */\n  [addContactAsync.rejected]: (_, action) => action.payload,\n\n  /* Delete */\n  [deleteContactAsync.rejected]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading,\n  error: itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\n\nconst firstMiddleware = (state) => (next) => (action) => {\n  // console.log(\"firstMiddleware-> \", action);\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  firstMiddleware,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: true ?? process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import { useMatch, useResolvedPath } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nfunction CustomLink({ children, to, ...props }) {\n  let resolved = useResolvedPath(to);\n  let match = useMatch({ path: resolved.pathname, end: true });\n\n  return (\n    <div>\n      <Link\n        style={{ textDecoration: match ? \"underline\" : \"none\" }}\n        to={to}\n        {...props}\n      >\n        {children}\n      </Link>\n    </div>\n  );\n}\n\nexport default CustomLink;\n","import { Outlet } from \"react-router-dom\";\nimport CustomLink from \"components/CustomLink\";\n\nfunction Header() {\n  return (\n    <>\n      <header>\n        <nav>\n          <ul>\n            <li>\n              <CustomLink to=\"/\">Home</CustomLink>\n            </li>\n            <li>\n              <CustomLink to=\"/create\">Create contact</CustomLink>\n            </li>\n            <li>\n              <CustomLink to=\"/register\">Register</CustomLink>\n            </li>\n            <li>\n              <CustomLink to=\"/login\">Login</CustomLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <Outlet />\n    </>\n  );\n}\n\nexport default Header;\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getError = (state) => state.contacts.error;\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const search = filter.toUpperCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toUpperCase().includes(search)\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const search = filter.toUpperCase();\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(search)\n    );\n  }\n);\n","import s from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </section>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport {\n  getVisibleContacts,\n  getError,\n} from \"redux/contacts/contacts-selectors\";\nimport {\n  getContactsAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAsync());\n  }, [dispatch]);\n\n  console.log(error && error.message);\n\n  return (\n    <ul className={s.list}>\n      {error && (\n        <li>\n          <h2 style={{ color: \"red\", textTransform: \"uppercase\" }}>\n            {error.message}\n          </h2>\n        </li>\n      )}\n\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, phone: number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContactAsync(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\n\nfunction HomeView() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default HomeView;\n","// import { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\n// import s from \"./ContactForm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts, getError } from \"../../redux/contacts/contacts-selectors\";\nimport { addContactAsync } from \"redux/contacts/contacts-operation\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  // const onSaveContact = (e) => {\n  //   e.preventDefault();\n\n  //   const newContactName = e.target.name.value.toUpperCase();\n  //   const knownContactToName = contacts.find(\n  //     ({ name }) => name.toUpperCase() === newContactName\n  //   );\n\n  //   if (knownContactToName) {\n  //     return alert(`${newContactName} is already in contacts.`);\n  //   }\n\n  //   const newContact = { name, phone: number };\n  //   setName(\"\");\n  //   setNumber(\"\");\n\n  //   // ? GlobalState - add new Contact\n  //   dispatch(addContactAsync(newContact));\n  // };\n\n  const setValidate = (values) => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    if (!values.number) {\n      errors.number = \"Required\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: \"\", number: \"\" }}\n        validate={setValidate}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label htmlFor=\"name\">Name</label>\n            <Field type=\"text\" name=\"name\" id=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n\n            <label htmlFor=\"phoneNumber\">Number</label>\n            <Field type=\"tel\" name=\"number\" id=\"phoneNumber\" />\n            <ErrorMessage name=\"number\" component=\"div\" />\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Add contact\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      {error && (\n        <h2 style={{ color: \"red\", textTransform: \"uppercase\" }}>\n          {error.message}\n        </h2>\n      )}\n    </>\n  );\n}\n\nexport default ContactForm;\n","import ContactForm from \"components/ContactForm\";\n\nfunction CreateView() {\n  return (\n    <>\n      <h1>Create contact</h1>\n\n      <ContactForm />\n    </>\n  );\n}\n\nexport default CreateView;\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nfunction RegisterForm() {\n  const setValidate = (values) => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Required\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: \"\", email: \"\", password: \"\" }}\n      validate={setValidate}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/\";\n\nfunction RegisterView() {\n  return (\n    <>\n      <h1>Register</h1>\n\n      <RegisterForm />\n    </>\n  );\n}\n\nexport default RegisterView;\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nfunction LoginForm() {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from \"components/LoginForm\";\n\nfunction LoginView() {\n  return (\n    <>\n      <h1>Login</h1>\n\n      <LoginForm />\n    </>\n  );\n}\n\nexport default LoginView;\n","import { Link } from \"react-router-dom\";\n\nfunction NotFoundView() {\n  return (\n    <div>\n      <h1>Nothing to see here!</h1>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundView;\n","import { Route, Routes } from \"react-router\";\nimport Header from \"components/Header\";\nimport HomeView from \"views/HomeView\";\nimport CreateView from \"views/CreateView\";\nimport RegisterView from \"views/RegisterView\";\nimport LoginView from \"views/LoginView\";\nimport NoFoundView from \"views/NotFoundView\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Routes>\n        <Route path=\"/\" element={<Header />}>\n          <Route index element={<HomeView />} />\n          <Route path=\"create\" element={<CreateView />} />\n          <Route path=\"register\" element={<RegisterView />} />\n          <Route path=\"login\" element={<LoginView />} />\n          <Route path=\"*\" element={<NoFoundView />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}