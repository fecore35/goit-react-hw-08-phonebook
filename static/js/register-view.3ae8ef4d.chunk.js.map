{"version":3,"sources":["components/RegisterForm/RegisterForm.js","views/RegisterView.js"],"names":["RegisterForm","dispatch","useDispatch","setValidate","yup","name","required","email","password","min","formik","useFormik","initialValues","number","validationSchema","onSubmit","values","setSubmitting","authOperations","register","Box","component","handleSubmit","noValidate","autoComplete","Stack","direction","justifyContent","alignItems","spacing","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","RegisterView"],"mappings":"yOA2FeA,MAjFf,WACE,IAAMC,EAAWC,cAOXC,EAAcC,IAAW,CAC7BC,KAAMD,IAAW,cAAcE,SAAS,oBACxCC,MAAOH,IACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,IACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAGRI,EAASC,YAAU,CACvBC,cAAe,CACbP,KAAM,GACNQ,OAAQ,IAEVC,iBAAkBX,EAClBY,SAvBiB,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAC5BhB,EAASiB,IAAeC,SAASH,IACjCC,GAAc,MAwBhB,OACE,cAACG,EAAA,EAAD,CACEC,UAAU,OACVN,SAAUL,EAAOY,aACjBC,YAAU,EACVC,aAAa,MAJf,SAME,eAACC,EAAA,EAAD,CACEC,UAAU,MACVC,eAAe,gBACfC,WAAW,UACXC,QAAS,EAJX,UAME,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACH3B,KAAK,OACL4B,MAAM,OACNC,MAAOxB,EAAOM,OAAOX,KACrB8B,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQjC,MAAQkC,QAAQ7B,EAAO8B,OAAOnC,MACpDoC,WAAY/B,EAAO4B,QAAQjC,MAAQK,EAAO8B,OAAOnC,OAEnD,cAACyB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACH3B,KAAK,QACL4B,MAAM,QACNC,MAAOxB,EAAOM,OAAOT,MACrB4B,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQ/B,OAASgC,QAAQ7B,EAAO8B,OAAOjC,OACrDkC,WAAY/B,EAAO4B,QAAQ/B,OAASG,EAAO8B,OAAOjC,QAEpD,cAACuB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACH3B,KAAK,WACL4B,MAAM,WACNS,KAAK,WACLR,MAAOxB,EAAOM,OAAOR,SACrB2B,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQ9B,UAAY+B,QAAQ7B,EAAO8B,OAAOhC,UACxDiC,WAAY/B,EAAO4B,QAAQ9B,UAAYE,EAAO8B,OAAOhC,WAEvD,cAACmC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYd,WAAS,EAACW,KAAK,SAA3D,yBCvEOI,UAVf,WACE,OACE,qCACE,0CAEA,cAAC,EAAD","file":"static/js/register-view.3ae8ef4d.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { authOperations } from \"redux/auth\";\n\n/* yup: value validation */\nimport * as yup from \"yup\";\n\n/* Material UI */\nimport { Stack, Box, Button, TextField } from \"@mui/material\";\n\nfunction RegisterForm() {\n  const dispatch = useDispatch();\n\n  const onRegister = (values, { setSubmitting }) => {\n    dispatch(authOperations.register(values));\n    setSubmitting(false);\n  };\n\n  const setValidate = yup.object({\n    name: yup.string(\"Enter name\").required(\"Name is required\"),\n    email: yup\n      .string(\"Enter your email\")\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    password: yup\n      .string(\"Enter your password\")\n      .min(8, \"Password should be of minimum 8 characters length\")\n      .required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      number: \"\",\n    },\n    validationSchema: setValidate,\n    onSubmit: onRegister,\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={2}\n      >\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Login\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/\";\n\nfunction RegisterView() {\n  return (\n    <>\n      <h1>Register</h1>\n\n      <RegisterForm />\n    </>\n  );\n}\n\nexport default RegisterView;\n"],"sourceRoot":""}