{"version":3,"sources":["redux/auth/auth-operation.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-reducer.js","redux/store.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","Object","freeze","set","headers","common","Authorization","unset","register","createAsyncThunk","credentials","thunkAPI","a","post","data","rejectWithValue","logIn","logOut","_","fetchCurrentUser","state","getState","persistedToken","auth","get","operations","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","authOperations","fulfilled","action","payload","authSelectors","getIsLoggedIn","getUserEmail","changeFilter","createAction","getContactsAsync","response","contacts","addContactAsync","contact","newContact","deleteContactAsync","id","delete","itemsReducer","createReducer","filter","item","isLoading","pending","rejected","itemsError","filterReducer","contactsReducer","combineReducers","items","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","next","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","persistor","persistStore","Header","lazy","HomeView","ContactsView","RegisterView","LoginView","NotFoundView","App","dispatch","useDispatch","useEffect","className","fallback","path","element","index","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ac76a24c.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = Object.freeze({\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n});\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials, thunkAPI) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n  try {\n    const { data } = await axios.post(\"/users/logout\");\n    token.unset();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { authOperations } from \"redux/auth\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserEmail,\n};\n\nexport default authSelectors;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n/* Get */\n// export const getContactsRequest = createAction(\"contacts/GetContactsRequest\");\n// export const getContactsSuccesses = createAction(\n//   \"contacts/GetContactsSuccesses\"\n// );\n// export const getContactsError = createAction(\"contacts/GetContactsError\");\n\n/* Create */\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\n// export const addContactSuccesses = createAction(\"contacts/addContactSuccesses\");\n// export const addContactError = createAction(\"contacts/addContactError\");\n\n/* Delete */\n// export const deleteContactRequest = createAction(\n//   \"contacts/deleteContactRequest\"\n// );\n// export const deleteContactSuccesses = createAction(\n//   \"contacts/deleteContactSuccesses\"\n// );\n// export const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const createContact = createAction(\"contacts/Create\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getContactsAsync = createAsyncThunk(\n  \"contacts/getContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\"/contacts\");\n      const contacts = response.data;\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContactAsync = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\"/contacts\", contact);\n      const newContact = response.data;\n      return newContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContactAsync = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return { id };\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { changeFilter } from \"../contacts/contacts-action\";\n\nimport {\n  getContactsAsync,\n  addContactAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nconst itemsReducer = createReducer([], {\n  /* Get */\n  [getContactsAsync.fulfilled]: (_, action) => [...action.payload],\n\n  /* Create */\n  [addContactAsync.fulfilled]: (state, action) => [...state, action.payload],\n\n  /* Delete */\n  [deleteContactAsync.fulfilled]: (state, action) =>\n    state.filter((item) => item.id !== action.payload.id),\n});\n\nconst isLoading = createReducer(false, {\n  /* Get */\n  [getContactsAsync.pending]: () => true,\n  [getContactsAsync.fulfilled]: () => false,\n  [getContactsAsync.rejected]: () => false,\n\n  /* Create */\n  [addContactAsync.pending]: () => true,\n  [addContactAsync.fulfilled]: () => false,\n  [addContactAsync.rejected]: () => false,\n\n  /* Delete */\n  [deleteContactAsync.pending]: () => true,\n  [deleteContactAsync.fulfilled]: () => false,\n  [deleteContactAsync.rejected]: () => false,\n});\n\nconst itemsError = createReducer(null, {\n  /* Get */\n  [getContactsAsync.rejected]: (_, action) => action.payload,\n\n  /* Create */\n  [addContactAsync.rejected]: (_, action) => action.payload,\n\n  /* Delete */\n  [deleteContactAsync.rejected]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading,\n  error: itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\nimport { authReducer } from \"redux/auth\";\n\nconst firstMiddleware = (state) => (next) => (action) => {\n  // console.log(\"firstMiddleware-> \", action);\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  firstMiddleware,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: true ?? process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { useEffect, lazy, Suspense } from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth\";\nconst Header = lazy(() =>\n  import(\"components/Header\" /* webpackChunkName: 'header-view' */)\n);\nconst HomeView = lazy(() =>\n  import(\"views/HomeView\" /* webpackChunkName: 'home-view' */)\n);\nconst ContactsView = lazy(() =>\n  import(\"views/ContactsView\" /* webpackChunkName: 'contacts-view' */)\n);\nconst RegisterView = lazy(() =>\n  import(\"views/RegisterView\" /* webpackChunkName: 'register-view' */)\n);\nconst LoginView = lazy(() =>\n  import(\"views/LoginView\" /* webpackChunkName: 'login-view' */)\n);\nconst NotFoundView = lazy(() =>\n  import(\"views/NotFoundView\" /* webpackChunkName: '404-view' */)\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <Suspense fallback={<h1>Loading </h1>}>\n        <Routes>\n          <Route path=\"/\" element={<Header />}>\n            <Route index element={<HomeView />} />\n            <Route path=\"contacts\" element={<ContactsView />} />\n            <Route path=\"register\" element={<RegisterView />} />\n            <Route path=\"login\" element={<LoginView />} />\n            <Route path=\"*\" element={<NotFoundView />} />\n          </Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}