{"version":3,"sources":["redux/contacts/contacts-selectors.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/ContactList/ContactList.js","views/HomeView.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getError","error","getVisibleContacts","createSelector","search","toUpperCase","contact","name","includes","module","exports","Filter","useSelector","dispatch","useDispatch","className","s","container","type","input","pattern","title","value","onChange","e","changeFilter","target","ContactList","visibleContacts","useEffect","getContactsAsync","console","log","message","list","style","color","textTransform","map","id","number","tel","replace","item","href","button","onClick","deleteContactAsync","currentTarget","dataset","HomeView"],"mappings":"+IAAA,oJAEaA,EAAc,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAExCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAEtCC,EAAW,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAYrCC,EAAqBC,YAChC,CAACT,EAAaI,IACd,SAACF,EAAUG,GACT,IAAMK,EAASL,EAAOM,cACtB,OAAOT,EAASG,QAAO,SAACO,GAAD,OACrBA,EAAQC,KAAKF,cAAcG,SAASJ,U,mBCtB1CK,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,2FC0B9EC,MAtBf,WACE,IAAMZ,EAASa,YAAYd,KACrBe,EAAWC,cAEjB,OACE,yBAASC,UAAWC,IAAEC,UAAtB,SACE,yDAEE,uBACEC,KAAK,OACLH,UAAWC,IAAEG,MACbZ,KAAK,SACLa,QAAQ,yHACRC,MAAM,kcACNC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOX,EAASY,YAAaD,EAAEE,OAAOJ,iB,uCCuC3CK,MA9Cf,WACE,IAAMC,EAAkBhB,YAAYV,KAC9BD,EAAQW,YAAYZ,KACpBa,EAAWC,cAQjB,OANAe,qBAAU,WACRhB,EAASiB,iBACR,CAACjB,IAEJkB,QAAQC,IAAI/B,GAASA,EAAMgC,SAGzB,qBAAIlB,UAAWC,IAAEkB,KAAjB,UACGjC,GACC,6BACE,oBAAIkC,MAAO,CAAEC,MAAO,MAAOC,cAAe,aAA1C,SACGpC,EAAMgC,YAKZL,GACCA,EAAgBU,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIhC,EAAmB,EAAnBA,KAAMiC,EAAa,EAAbA,OACzBC,EAAM,OAASD,EAAOE,QAAQ,YAAa,MACjD,OACE,qBAAa3B,UAAWC,IAAE2B,KAA1B,UACE,8BACGpC,EADH,KACU,mBAAGqC,KAAMH,EAAT,SAAeD,OAEzB,wBACEzB,UAAWC,IAAE6B,OACb3B,KAAK,SACL,UAASqB,EACTO,QAAS,SAACtB,GACRX,EAASkC,YAAmBvB,EAAEwB,cAAcC,QAAQV,MALxD,SAQE,cAAC,IAAD,QAZKA,UCxBNW,UAXf,WACE,OACE,qCACE,2CAEA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/home-view.e19a2629.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getError = (state) => state.contacts.error;\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const search = filter.toUpperCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toUpperCase().includes(search)\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const search = filter.toUpperCase();\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(search)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","import s from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </section>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport {\n  getVisibleContacts,\n  getError,\n} from \"redux/contacts/contacts-selectors\";\nimport {\n  getContactsAsync,\n  deleteContactAsync,\n} from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAsync());\n  }, [dispatch]);\n\n  console.log(error && error.message);\n\n  return (\n    <ul className={s.list}>\n      {error && (\n        <li>\n          <h2 style={{ color: \"red\", textTransform: \"uppercase\" }}>\n            {error.message}\n          </h2>\n        </li>\n      )}\n\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContactAsync(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\n\nfunction HomeView() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default HomeView;\n"],"sourceRoot":""}