{"version":3,"sources":["components/LoginForm/LoginForm.js","views/LoginView.js"],"names":["LoginForm","dispatch","useDispatch","setValidate","yup","email","required","password","min","formik","useFormik","initialValues","name","number","validationSchema","onSubmit","values","setSubmitting","resetForm","authOperations","logIn","Box","component","handleSubmit","noValidate","autoComplete","Stack","direction","justifyContent","alignItems","spacing","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","LoginView"],"mappings":"wOAgFeA,MAtEf,WACE,IAAMC,EAAWC,cAOXC,EAAcC,IAAW,CAC7BC,MAAOD,IACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,IACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGRG,EAASC,YAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,OAAQ,IAEVC,iBAAkBX,EAClBY,SAtBc,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAA+B,EAAhBC,UACxCjB,EAASkB,IAAeC,MAAMJ,IAC9BC,GAAc,MAuBhB,OACE,cAACI,EAAA,EAAD,CACEC,UAAU,OACVP,SAAUN,EAAOc,aACjBC,YAAU,EACVC,aAAa,MAJf,SAME,eAACC,EAAA,EAAD,CACEC,UAAU,MACVC,eAAe,gBACfC,WAAW,UACXC,QAAS,EAJX,UAME,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHrB,KAAK,QACLsB,MAAM,QACNC,MAAO1B,EAAOO,OAAOX,MACrB+B,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAO8B,QAAQlC,OAASmC,QAAQ/B,EAAOgC,OAAOpC,OACrDqC,WAAYjC,EAAO8B,QAAQlC,OAASI,EAAOgC,OAAOpC,QAEpD,cAAC0B,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHrB,KAAK,WACLsB,MAAM,WACNS,KAAK,WACLR,MAAO1B,EAAOO,OAAOT,SACrB6B,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAO8B,QAAQhC,UAAYiC,QAAQ/B,EAAOgC,OAAOlC,UACxDmC,WAAYjC,EAAO8B,QAAQhC,UAAYE,EAAOgC,OAAOlC,WAEvD,cAACqC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYd,WAAS,EAACW,KAAK,SAA3D,yBC5DOI,UAVf,WACE,OACE,qCACE,uCAEA,cAAC,EAAD","file":"static/js/login-view.ac3152da.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { authOperations } from \"redux/auth\";\n\n/* yup: value validation */\nimport * as yup from \"yup\";\n\n/* Material UI */\nimport { Stack, Box, Button, TextField } from \"@mui/material\";\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n\n  const onLogin = (values, { setSubmitting, resetForm }) => {\n    dispatch(authOperations.logIn(values));\n    setSubmitting(false);\n  };\n\n  const setValidate = yup.object({\n    email: yup\n      .string(\"Enter your email\")\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    password: yup\n      .string(\"Enter your password\")\n      .min(8, \"Password should be of minimum 8 characters length\")\n      .required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      number: \"\",\n    },\n    validationSchema: setValidate,\n    onSubmit: onLogin,\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={2}\n      >\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Login\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from \"components/LoginForm\";\n\nfunction LoginView() {\n  return (\n    <>\n      <h1>Login</h1>\n\n      <LoginForm />\n    </>\n  );\n}\n\nexport default LoginView;\n"],"sourceRoot":""}